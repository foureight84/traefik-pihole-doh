version: "3.7"

services:
  agent:
    image: portainer/agent:latest
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  traefik:
    image: traefik:latest
    ports:
      - target: 53
        published: 53
        protocol: tcp
      - target: 53
        published: 53
        protocol: udp
      - target: 80
        published: 80
        protocol: tcp
    environment:
      - TZ=US/Los_Angeles
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/etc/traefik/traefik.yaml
    networks:
      - traefik
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.api.rule=Host(`traefik.home`)
        - traefik.http.routers.api.service=api@internal
        - traefik.http.routers.api.entrypoints=web
        - traefik.http.services.api.loadbalancer.server.port=8080

  portainer:
    image: portainer/portainer-ce:latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer_data:/data
    networks:
      - traefik
      - agent_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        # WebUI
        - traefik.enable=true
        - traefik.http.routers.portainer.rule=Host(`portainer.home`)
        - traefik.http.routers.portainer.entrypoints=web
        - traefik.http.services.portainer.loadbalancer.server.port=9000
        - traefik.http.routers.portainer.service=portainer

        # Edge
        - traefik.http.routers.portaineredge.rule=Host(`edge.portainer.home`)
        - traefik.http.routers.portaineredge.entrypoints=web
        - traefik.http.services.portaineredge.loadbalancer.server.port=8000
        - traefik.http.routers.portaineredge.service=portaineredge
      
  whoami:
    image: traefik/whoami
    networks:
      - traefik
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`whoami.home`)
      - traefik.http.routers.whoami.entrypoints=web
      - traefik.http.services.whoami.loadbalancer.server.port=80

networks:
  traefik:
    external: true
  agent_network:
    external: true

volumes:
  portainer_data:
